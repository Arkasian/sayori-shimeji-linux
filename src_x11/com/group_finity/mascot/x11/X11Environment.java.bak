package com.group_finity.mascot.x11;

import java.awt.Rectangle;
import jnacontrib.x11.api.X.Display;
import jnacontrib.x11.api.X.X11Exception;
import jnacontrib.x11.api.X.Window;
import com.group_finity.mascot.environment.Area;
import com.group_finity.mascot.environment.ManyAreas;
import com.group_finity.mascot.environment.Environment;
import com.sun.jna.platform.unix.X11;

class X11Environment extends Environment {
	
	private Display display = new Display();
	public ManyAreas IE = new ManyAreas();
	public static final Area workArea = new Area();
	public Area activeIE = new Area();
	private int ie_wid;
			
	X11Environment() {
		Rectangle screenRect = new Rectangle(3600,1050);
		workArea.set(screenRect);
	}
	
	@Override
	public void tick() {
		super.tick();
		update();
	}

	private void update() {
		Window[] allWindows = null;
		Window ie = null;
		int x,y,id,w,h;
		Rectangle r = new Rectangle();
		Area a = new Area();
			
		if (display == null) return;
		
		try {
			allWindows = display.getWindows();
			try {
				ie = display.getActiveWindow();
				w = ie.getGeometry().width;
				h = ie.getGeometry().height;
				x = ie.getBounds().x;
				y = ie.getBounds().y;
				r = new Rectangle(x-11,y-58,w+2,h+20);
				activeIE.set(r);
				activeIE.setVisible(true);
				ie_wid = ie.getID();
			} catch (X11Exception e) {}
			
			this.IE = new ManyAreas();
			uguu:	
				for (int i=0;i<allWindows.length;i++) {
					id = allWindows[i].getID();
					if (id == ie_wid) continue uguu;
					w = allWindows[i].getGeometry().width;
					h = allWindows[i].getGeometry().height;
					x = allWindows[i].getBounds().x;
					y = allWindows[i].getBounds().y;
					r = new Rectangle(x-11,y-58,w+2,h+20);
					a = new Area();
					a.set(r);
					a.setVisible(true);
					IE.add(a);
				}
		} catch (X11Exception e) {System.out.println("asdasd");}

	}
	
/*	private boolean isIE(String titlebar, int w, int h) {
		if (titlebar!=null) {
			if (titlebar.contains("Firefox")) return true;
			if (titlebar.contains("weechat")) return true;
			if (titlebar.contains("VIM")) return true;
			if (titlebar.contains("gedit")) return true;
		}
		if (w == 640 && h == 385) return true;
		return false;
	} */
	
	@Override
	public Area getActiveIE() {
		return this.activeIE;		
	}
	
	@Override
	public ManyAreas getIE() {
		return this.IE;
	}
	
	@Override
	public Area getWorkArea() {
		return this.workArea;
	}

}
	

